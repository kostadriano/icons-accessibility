{"version":3,"sources":["components/IconCard.js","components/index.js","index.js"],"names":["IconCard","attrs","Icon","Box","component","Grid","item","md","xs","border","p","borderRadius","display","flexDirection","justifyContent","mb","Typography","aria-hidden","JSON","stringify","CustomIcon","getAllCombinations","result","makeCombinations","currentAttrs","nextAttrs","forEach","attr","i","current","Object","keys","length","role","push","slice","MATERIAL_ICONS","titleAccess","title","MATERIAL_SVG_ICONS","SVG_ICONS","App","variant","container","map","iconContent","SvgIcon","style","height","width","viewBox","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yQAqBeA,EAnBE,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,KAAV,OACf,eAACC,EAAA,EAAD,CACEC,UAAWC,IACXC,MAAI,EACJC,GAAI,EACJC,GAAI,GACJC,OAAO,sBACPC,EAAG,EACHC,aAAc,EACdC,QAAQ,OACRC,cAAc,SACdC,eAAe,gBAVjB,UAYE,cAACX,EAAA,EAAD,CAAKY,GAAI,EAAT,SACE,cAACC,EAAA,EAAD,CAAYZ,UAAU,MAAMa,eAAA,EAA5B,SAAyCC,KAAKC,UAAUlB,EAAO,KAAM,OAEtEC,MChBEkB,E,k8CAAAA,E,yGAGP,IAAMC,EAAqB,SAAApB,GACzB,IAAMqB,EAAS,GAkBf,OAhByB,SAAnBC,EAAoBC,EAAcC,GACtCA,EAAUC,SAAQ,SAACC,EAAMC,GACvB,IAAMC,EAAO,2BACRL,GACAG,GAIiC,IAAhCG,OAAOC,KAAKF,GAASG,QAAiC,QAAjBH,EAAQI,MAAiBX,EAAOY,KAAKL,GAEhFN,EAAiBM,EAASJ,EAAUU,MAAMP,EAAI,OAIlDL,CAAiB,GAAItB,GAEdqB,GAGHc,EAAiBf,EAAmB,CACxC,CAAEgB,YAAa,sBACf,CAAE,aAAc,qBAChB,CAAEC,MAAO,iBACT,CAAEL,KAAM,SAGJM,EAAqBlB,EAAmB,CAC5C,CAAEgB,YAAa,sBACf,CAAE,aAAc,qBAChB,CAAEC,MAAO,iBACT,CAAEL,KAAM,SAGJO,EAAYnB,EAAmB,CACnC,CAAE,aAAc,qBAChB,CAAEiB,MAAO,iBACT,CAAEL,KAAM,SAiDKQ,MA9Cf,WACE,OACE,eAACtC,EAAA,EAAD,CAAKO,EAAG,GAAR,UACE,eAACP,EAAA,EAAD,CAAKY,GAAI,EAAT,UACE,cAACC,EAAA,EAAD,CAAYC,eAAA,EAAYyB,QAAQ,KAAhC,4BAEA,cAACrC,EAAA,EAAD,CAAMsC,WAAS,EAAf,SACGP,EAAeQ,KAAI,SAAAC,GAAW,OAC7B,cAAC,EAAD,CACE5C,MAAO4C,EACP3C,KAAM,cAAC,IAAD,eAAkB2C,cAMhC,eAAC1C,EAAA,EAAD,CAAKY,GAAI,EAAT,UACE,cAACC,EAAA,EAAD,CAAYC,eAAA,EAAYyB,QAAQ,KAAhC,6CAEA,cAACrC,EAAA,EAAD,CAAMsC,WAAS,EAAf,SACGJ,EAAmBK,KAAI,SAAAC,GAAW,OACjC,cAAC,EAAD,CACE5C,MAAO4C,EACP3C,KAAM,cAAC4C,EAAA,EAAD,aAAS1C,UAAWgB,EAAY2B,MAAO,CAAEC,OAAQ,OAAQC,MAAO,QAAUC,QAAQ,uBAA0BL,cAM1H,eAAC1C,EAAA,EAAD,CAAKY,GAAI,EAAT,UACE,cAACC,EAAA,EAAD,CAAYC,eAAA,EAAYyB,QAAQ,KAAhC,8BAEA,cAACrC,EAAA,EAAD,CAAMsC,WAAS,EAAf,SACGH,EAAUI,KAAI,SAAAC,GAAW,OACxB,cAAC,EAAD,CACE5C,MAAO4C,EACP3C,KAAM,cAAC,EAAD,aAAY6C,MAAO,CAAEC,OAAQ,OAAQC,MAAO,SAAcJ,kBC9E9EM,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.4f5b5cb0.chunk.js","sourcesContent":["import { Typography, Box, Grid, Divider } from '@material-ui/core';\n\nconst IconCard = ({ attrs, Icon }) =>\n  <Box\n    component={Grid}\n    item\n    md={4}\n    xs={12}\n    border=\"1px solid lightgray\"\n    p={4}\n    borderRadius={5}\n    display=\"flex\"\n    flexDirection=\"column\"\n    justifyContent=\"space-between\"\n  >\n    <Box mb={2}>\n      <Typography component=\"pre\" aria-hidden>{JSON.stringify(attrs, null, 2)}</Typography>\n    </Box>\n    {Icon}\n  </Box>\n\nexport default IconCard","import { Box, Grid, Typography, SvgIcon } from '@material-ui/core';\nimport MaterialIcon from '@material-ui/icons/AcUnit'\nimport CustomIcon from '../assets/icon.svg'\nimport IconCard from './IconCard'\n\nconst getAllCombinations = attrs => {\n  const result = []\n\n  const makeCombinations = (currentAttrs, nextAttrs) => {\n    nextAttrs.forEach((attr, i) => {\n      const current = {\n        ...currentAttrs,\n        ...attr\n      }\n\n      // Remove case with role img alone\n      if (!(Object.keys(current).length === 1 && current.role === 'img')) result.push(current)\n\n      makeCombinations(current, nextAttrs.slice(i + 1))\n    })\n  }\n\n  makeCombinations({}, attrs)\n\n  return result\n}\n\nconst MATERIAL_ICONS = getAllCombinations([\n  { titleAccess: 'Lendo: titleAccess' },\n  { 'aria-label': 'Lendo: aria-label' },\n  { title: 'Lendo: Titulo' },\n  { role: 'img' },\n])\n\nconst MATERIAL_SVG_ICONS = getAllCombinations([\n  { titleAccess: 'Lendo: titleAccess' },\n  { 'aria-label': 'Lendo: aria-label' },\n  { title: 'Lendo: Titulo' },\n  { role: 'img' },\n])\n\nconst SVG_ICONS = getAllCombinations([\n  { 'aria-label': 'Lendo: aria-label' },\n  { title: 'Lendo: Titulo' },\n  { role: 'img' },\n])\n\nfunction App() {\n  return (\n    <Box p={10}>\n      <Box mb={4}>\n        <Typography aria-hidden variant=\"h2\">Material Icons</Typography>\n\n        <Grid container>\n          {MATERIAL_ICONS.map(iconContent =>\n            <IconCard\n              attrs={iconContent}\n              Icon={<MaterialIcon {...iconContent} />}\n            />\n          )}\n        </Grid >\n      </Box>\n\n      <Box mb={4}>\n        <Typography aria-hidden variant=\"h2\">SVG Icons With Material IconSvg</Typography>\n\n        <Grid container>\n          {MATERIAL_SVG_ICONS.map(iconContent =>\n            <IconCard\n              attrs={iconContent}\n              Icon={<SvgIcon component={CustomIcon} style={{ height: \"24px\", width: \"24px\" }} viewBox=\"0 0 512.007 512.007\" {...iconContent} />}\n            />\n          )}\n        </Grid >\n      </Box>\n\n      <Box mb={4}>\n        <Typography aria-hidden variant=\"h2\">Custom SVG Icons</Typography>\n\n        <Grid container>\n          {SVG_ICONS.map(iconContent =>\n            <IconCard\n              attrs={iconContent}\n              Icon={<CustomIcon style={{ height: \"24px\", width: \"24px\" }} {...iconContent} />}\n            />\n          )}\n        </Grid >\n      </Box>\n\n    </Box>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}